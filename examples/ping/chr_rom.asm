* = 0 ; We just use * to count position in the CHR-rom, begin with zero is easy

; TILE $00 - rainbow
;
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
.byt %01011010, %01011010, %01011010, %01011010, %01011010, %01011010, %01011010, %01011010
.byt %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100

; TILE $01 - rainbow
;
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
; 01233210
.byt %01011010, %01011010, %01011010, %01011010, %01011010, %01011010, %01011010, %01011010
.byt %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100, %00111100

; TILE $02 - ball
;
; 00111100
; 01111110
; 11111111
; 11111111
; 11111111
; 11111111
; 01111110
; 00111100
.byt %00111100, %01111110, %11111111, %11111111, %11111111, %11111111, %01111110, %00111100
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000

#if $1000-* < 0
#echo *** Error: VRAM bank1 data occupies too much space 
#else
.dsb $1000-*, 0
#endif

; TILE $00 - Full backdrop color
;
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
; 00000000
.byt $00, $00, $00, $00, $00, $00, $00, $00
.byt $00, $00, $00, $00, $00, $00, $00, $00

; TILE $01 - Solid 1
;
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
; 11111111
.byt $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byt $00, $00, $00, $00, $00, $00, $00, $00

; TILE $02 - Solid 2
.byt $00, $00, $00, $00, $00, $00, $00, $00
.byt $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff

; TILE $03 - Solid 3
.byt $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byt $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff

; TILE $04 to $12 - title
;
; Full picture layout:
;  $04 $05 $06 $07 $08
;  $09 $0a $0b $0c $0d
;  $0e $0f $10 $11 $12
.byt %10000000, %10000000, %10011111, %10011111, %10011111, %10011111, %10011111, %10011111
.byt %01111111, %01111111, %01100000, %01100000, %01100000, %01100000, %01100000, %01100000
.byt %01111111, %00111111, %00111111, %10011111, %10011001, %10011000, %10011100, %00011011
.byt %10000000, %11000000, %11000000, %01100000, %01100110, %01100111, %01100011, %11100100
.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11110011
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00001100
.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111000
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000111
.byt %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111, %00011111
.byt %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000, %11100000
.byt %10011100, %10000000, %10000011, %10011111, %10011111, %10011111, %10011111, %10011111
.byt %01100011, %01111111, %01111100, %01100000, %01100000, %01100000, %01100000, %01100000
.byt %00111001, %01111001, %11111001, %11111001, %11111001, %11111001, %11111001, %11111001
.byt %11000110, %10000110, %00000110, %00000110, %00000110, %00000110, %00000110, %00000110
.byt %11000001, %11000000, %11001100, %11001110, %11001110, %11001110, %11001110, %11001110
.byt %00111110, %00111111, %00110011, %00110001, %00110001, %00110001, %00110001, %00110001
.byt %11110000, %11100011, %11100111, %01100111, %01001111, %01001111, %01001111, %01001111
.byt %00001111, %00011100, %00011000, %10011000, %10110000, %10110000, %10110000, %10110000
.byt %00001111, %11001111, %11001111, %11001111, %10001111, %10011111, %10011111, %00011111
.byt %11110000, %00110000, %00110000, %00110000, %01110000, %01100000, %01100000, %11100000
.byt %10011111, %10111111, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %01100000, %01000000, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
.byt %11111000, %11111000, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %00000111, %00000111, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
.byt %11011110, %01011110, %11111111, %11111111, %11111111, %11111111, %11111111, %11111111
.byt %00100001, %10100001, %00000000, %00000000, %00000000, %00000000, %00000000, %00000000
.byt %01100100, %01100000, %11110001, %11100111, %11100011, %11110001, %11111100, %11111110
.byt %10011011, %10011111, %00001110, %00011000, %00011100, %00001110, %00000011, %00000001
.byt %00011111, %00011111, %10011111, %10011111, %10011111, %10011111, %00011111, %00111111
.byt %11100000, %11100000, %01100000, %01100000, %01100000, %01100000, %11100000, %11000000

#if $2000-* < 0
#echo *** Error: VRAM bank2 data occupies too much space 
#else
.dsb $2000-*, 0
#endif
